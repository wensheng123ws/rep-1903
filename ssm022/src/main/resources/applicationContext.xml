<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	

	 
	 <!-- 数据库组 -->
     <!-- 配置数据源 (连接池) -->       
     <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		       <property name="driverClassName" value="com.mysql.jdbc.Driver"/>  
               <property name="url" value="jdbc:mysql://localhost:3306/empdb?useUnicode=true&amp;characterEncoding=utf-8 "/>  
               <property name="username" value="root"/>  
     		   <property name="password" value="123456"/>  
      		    <property name="initialSize" value="10"/>  
     		    <property name="maxActive" value="200" />    
     		   <property name="minIdle" value="5" />  
	 </bean>
     <!-- 配置SqlSession工厂 会产生SqlSession -->
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 定义数据源 -->
        <property name="dataSource" ref="dataSource" />
     <!--  <property name="mapperLocations" value="classpath*:com.emp.dao/*.xml"></property> -->
     <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    </bean>
     <!-- Dao接口的扫描器 -->
     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- session工厂是哪一个 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!-- dao接口都放在哪个包下 -->
        <property name="basePackage" value="com.emp.dao" />
    </bean>
     <!-- 事务管理器 -->
      <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>		
    <!-- 事务注解驱动 -->
    <tx:annotation-driven  />
    
    
    <!-- mvc组 -->
   <!-- 开启注解驱动 -->
	 <context:component-scan base-package="com.emp"></context:component-scan> 
    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
    <mvc:annotation-driven/>
    <!-- 允许访问静态资源 -->
    <mvc:default-servlet-handler/>


    
    <!-- 视图解析器 -->
     <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/WEB-INF/jsp/" />  
        <property name="suffix" value=".jsp" />          
    </bean>
    
    <!-- 拦截器 -->
    <!-- <mvc:interceptors>
       <mvc:interceptor>
          拦截哪些路径 
                      路径 就是Controller中的RequestMapping
                      如:/emp/conditionList 
         
          <mvc:mapping path="/**"/>
          放行哪些路径
          <mvc:exclude-mapping path="/user/*"/>
          <mvc:exclude-mapping path="/emp/conditionList"/>
          <bean class="com.emp.interceptor.LoginInterceptor"></bean>
       </mvc:interceptor>
    </mvc:interceptors> -->
    
    <!-- Shiro配置开始 -->
    <!-- 自定义Realm 
       核心组件,定义认证和授权的业务逻辑
    -->
	<bean class="com.emp.utils.MyRealm" id="myRealm">
		<property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="MD5"></property> <!-- 加密算法的名称 -->
                <property name="hashIterations" value="1024"></property> <!-- 配置加密的次数 -->
            </bean>
        </property>
	</bean>
	<!-- 安全管理器 -->
	<bean class="org.apache.shiro.web.mgt.DefaultWebSecurityManager" id="securityManager">
		<property name="realm" ref="myRealm"/>
		<!-- 配置记住我 -->
        <property name="rememberMeManager" ref="rememberMeManager"></property>
	</bean>
	
	<!-- 登出过滤器 -->
	<bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter"> 
        <property name="redirectUrl" value="/user/toLogin" /> 
     </bean> 
    
	<!-- Shiro过滤器 -->
	<bean class="org.apache.shiro.spring.web.ShiroFilterFactoryBean" id="shiroFilter">
		<!-- Shiro的核心安全接口,这个属性是必须的 -->
		<property name="securityManager" ref="securityManager"/>
		<!-- 身份认证失败，则跳转到登录页面的配置 -->
		<property value="/user/toLogin" name="loginUrl"/>
		<!-- 权限认证失败，则跳转到指定页面 -->
		<!-- <property name="unauthorizedUrl" value="/user/unauthorized"/> -->
		<!-- Shiro连接约束配置,即过滤链的定义 -->
		<property name="filterChainDefinitions">
			<value>
			    <!-- 请求路径=过滤器 -->
				/user/login=anon 
				/user/toLogin=anon 
				/user/toRegister=anon 
				/user/register=anon 
				/user/logout=logout
				/**=user
			</value>
		</property>
	</bean>
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean class="org.apache.shiro.spring.LifecycleBeanPostProcessor" id="lifecycleBeanPostProcessor"/>
	<!-- 开启Shiro注解 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>
	
	<!-- 记住密码Cookie -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
        <constructor-arg value="rememberMe"/>
        <!-- 7天,采用spring el表达式来计算，方便修改 -->
        <property name="maxAge" value="#{7 * 24 * 60 * 60}"/>
    </bean>
    
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref="rememberMeCookie"/>  
    </bean>

	<!-- Shiro配置结束 -->
	
	<!-- Spring全局的异常处理bean -->
	<bean
	  class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!-- 这里你可以根据需要定义N多个错误异常转发 -->
                <prop key="org.apache.shiro.authz.UnauthorizedException">redirect:/user/unauthorized</prop>
            </props>
        </property>
	</bean>
</beans>  